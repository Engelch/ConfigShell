#!/usr/bin/env bash
# vim: set expandtab: ts=3: sw=3
# shellcheck disable=SC2155
#
# TITLE: $_app
#
# DESCRIPTION: <see usage function below>
#
# LICENSE: MIT todo
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons
# to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies
# or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
# PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
# FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

function loadLibs() {
    #########################################################################################
    # ConfigShell lib 1.1 (codebase 1.0.0)
    bashLib="/opt/ConfigShell/lib/bashlib.sh"
    [ ! -f "$bashLib" ] && 1>&2 echo "bash-library $bashLib not found" && exit 127
    # shellcheck source=/opt/ConfigShell/lib/bashlib.sh
    source "$bashLib"
}

function usage()
{
    1>&2 cat <<HERE
NAME
    $_app
SYNOPSIS
    $_app [-D] [ -n ns ] [ -f ] [ -x ]  [dir...]
    $_app [-V]
    $_app -h
VERSION
    $_appVersion
DESCRIPTION
    logs script for K8s to match multiple pods
OPTIONS
    -f      ::= tail logs, not when mutliple pods are matching
    -n ns   ::= specify a namespace
    -D      ::= enable debug output
    -V      ::= output the version number to stderr and exit with 0
    -x      ::= dry-run, just show the commands that will be executed
    -h      ::= show usage message to stderr and exit with 0
HERE
}

## EXIT 0, 1
function parseCLI() {
    while getopts "DVfhn:x" options; do         # Loop: Get the next option;
        case "${options}" in                    # TIMES=${OPTARG}
            D) 1>&2 echo Debug enabled ; DebugFlag="TRUE"
               ;;
            V) 1>&2 echo $_appVersion
               exit 0
               ;;
            x) dry=echo
               ;;
            h) usage ; exit 0
               ;;
            f) follow=1
               ;;
            n) ns=("-n" "${OPTARG}")
               ;;
            *) errorExit 1 "wrong usage. Help with $_app -h"
               ;;
        esac
    done
}

# EXIT 10, 11
function doLogs() {
    [ -z "$1" ] && errorExit 10 echo specify a regex to match pods
    matcher="$1"
    debug matcher is "$1"
    shift
    [ "$follow" -ne 0 ] && [ $("$KUBECTL" get pods ${ns[@]} | grep -c "$matcher") -gt 1 ] && errorExit 11 follow option set but multiple pods matching
    for pod in $($KUBECTL get pods ${ns[@]} | grep "$matcher" | awk '{ print $1; }') ; do
        echo "$pod -------------------------------------------"
        set -x
        "$dry" "$KUBECTL" logs ${ns[@]} "$pod" "$@"
        set +x
    done
}

function main() {
    declare -r _app=$(basename "${0}")
    declare -r _appDir=$(dirname "$0")
    declare -r _absoluteAppDir=$(cd "$_appDir" || exit 99 ; /bin/pwd)
    declare -r _appVersion="1.1.1"      # use semantic versioning
    export DebugFlag=${DebugFlag:-FALSE}

    declare -a ns=()
    declare follow=0
    declare dry=

    parseCLI "$@"               # cannot use fn-s from loadLibs
    shift "$(( OPTIND - 1 ))"   # not working inside parseCLI

    loadLibs

    debug args are "$*"
    doLogs "$@"
}

main "$@"

# EOF
