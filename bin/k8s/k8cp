#!/usr/bin/env bash

[ -z "$KUBECTL" ] && echo >&2 "KUBECTL environment variable is not set, exiting" && exit 1

## cmdline parsing
declare -a other_opts=()
declare -a ns=()
declare -a container=()
while [[ $# -gt 0 ]]; do
    case "$1" in
    -c | --container)
        container=("-c" "$2")
        shift 2
        ;;
    -n | --namespace)
        ns=("-n" "$2")
        shift 2
        ;;
    *)
        other_opts+=("$1") # save positional arg
        shift
        ;;
    esac
done

declare -a cmd_to_exec=("$KUBECTL" "${ns[@]}" "cp")

[ "${#other_opts[@]}" -eq 0 ] && echo >&2 "ERROR: no pod name given" && exit 2
[ "${#other_opts[@]}" -eq 1 ] && echo >&2 "ERROR: only source of copy given" && exit 3
[ "${#other_opts[@]}" -ge 3 ] && echo >&2 "ERROR: currently only 1 source and 1 destination are supported" && exit 4
# Check whether one of source or dest looks like a unique-pod-spec (which contains a colon, pod:file)
! echo "${other_opts[0]}" | grep -q ':' &>/dev/null &&
    ! echo "${other_opts[1]}" | grep -q ':' &>/dev/null &&
    echo >&2 "ERROR: neither source nor destination look like unique-pod-specs (one of them should contain a colon ':'): ${other_opts[*]}" &&
    exit 5
# Check whether both source and dest contain a unique-pod-spec
echo "${other_opts[0]}" | grep -q ':' &>/dev/null &&
    echo "${other_opts[1]}" | grep -q ':' &>/dev/null &&
    echo >&2 "ERROR: BOTH source and destination look like unique-pod-specs (both of them contains a colon ':'): ${other_opts[*]}" &&
    exit 6

declare src="${other_opts[0]}"
declare dest="${other_opts[1]}"
_pod=
if [[ "$src" = *:* ]]; then
    _pod="$($KUBECTL "${ns[@]}" get pod | grep -i "${src%:*}" | awk '{ print $1; }')"
    [ "$(echo "$_pod" | wc -l)" -gt 1 ] && echo >&2 -e "ERROR: too many pods matched:\n$_pod" && exit 7
    [ "$_pod" = '' ] || [ -z "${_pod+x}" ] && {
        echo >&2 "ERROR: no pods matched with: ${src%:*}"
        exit 8
    }
    # kubectl cp doesn't like '.' as destination, and messes up big time
    [ "$dest" = '.' ] && dest="$(realpath "$dest")/$(basename "$src")"
    cmd_to_exec+=("$_pod:${src#*:}" "$dest" "${container[@]}")
else
    _pod="$($KUBECTL "${ns[@]}" get pod | grep -i "${dest%:*}" | awk '{ print $1; }')"
    [ "$(echo "$_pod" | wc -l)" -gt 1 ] && echo >&2 -e "ERROR: too many pods matched:\n$_pod" && exit 9
    [ "$_pod" = '' ] || [ -z "${_pod+x}" ] && {
        echo >&2 "ERROR: no pods matched with: ${dest%:*}"
        exit 10
    }
    cmd_to_exec+=("$src" "$_pod:${dest#*:}" "${container[@]}")
fi

set -x
"${cmd_to_exec[@]}"
