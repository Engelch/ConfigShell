#!/usr/bin/env bash
# vim: set expandtab: ts=3: sw=3
# shellcheck disable=SC2155
#
# TITLE: $_app
#
# DESCRIPTION: <see usage function below>
#
# LICENSE: MIT todo
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons
# to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies
# or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
# PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
# FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

# CHANGELOG
# 0.1
# - -o allows for output to a given file

#########################################################################################
# VARIABLES, CONSTANTS

#########################################################################################
readonly _app="$(basename $0)"
readonly _appDir="$(dirname $0)"
readonly _appVersion="0.1.0" # use semantic versioning

#########################################################################################
# ConfigShell lib 1.1 (codebase 1.0.0)
bashLib="/opt/ConfigShell/lib/bashlib.sh"
[ ! -f "$bashLib" ] && 1>&2 echo "bash-library $bashLib not found" && exit 127
# shellcheck source=/opt/ConfigShell/lib/bashlib.sh
source "$bashLib"
unset bashLib

#########################################################################################
# application-specific functions  ===============================================================================

function usage()
{
    err NAME - DESCRIPTION
    err4 "$_app" - Convert a markdown file into PDF. If a file latex.tex exists, include it as a header line
    err4 into the pandoc call.
    err
    err SYNOPSIS
    err4 "$_app" '[-D] [-f] [ -o file ] <<markdown-filename>>'
    err4 "$_app" '-V'
    err4 "$_app" '-h'
    err
    err VERSION
    err4 "$_appVersion"
    err
    err OPTIONS
    err4 '-D      ::= enable debug output'
    err4 '-V      ::= output the version number and exit with code 127'
    err4 '-h      ::= show usage message and exit with exit code 1'
    err4 '-f      ::= overwrite if output file already exists'
    err4 '-o      ::= output PDF file to the given file-name'
}

function parseCLI() {
    while getopts "DVfho:" options; do         # Loop: Get the next option;
        case "${options}" in                    # TIMES=${OPTARG}
            D)  err Debug enabled ; debugSet
                ;;
            V)  1>&2 echo $_appVersion ; exit 127
                ;;
            f)  debug forcedMode; forcedMode=TRUE
                ;;
            h)  usage ; exit 1
                ;;
            o)  debug outputfile is ${OPTARG}
                declare -g outfile="${OPTARG}"
                ;;
            *)
                err Help with "$_app" -h
                exit 2  # Exit abnormally.
                ;;
        esac
    done
}

function main() {
    exitIfBinariesNotFound pwd basename dirname pandoc
    exitIfFilesNotExisting /opt/ConfigShell/share/Markdown-Document/listing-ssetup.tex
    parseCLI "$@"
    shift "$(( OPTIND - 1 ))"  # not working inside parseCLI
    debug args are "$@"
    debug forcedMode is "${forcedMode:-FALSE}"

    file="$1"
    debug working on file "$file"
    exitIfPlainFilesNotExisting "$file"
    [ -z "$outfile" ] && fileGenerated="$(basename "$file" .md).pdf"
    [ -n "$outfile" ] && fileGenerated="$outfile"
    [ -f "$fileGenerated" ] && [ "$forcedMode" != TRUE ] && errorExit 10 Output file "$fileGenerated" already existing, not overwriting.
    header=
    [ -f latex.tex ] && debug including latex.tex to command && header="-H latex.tex"
    debug pandoc --pdf-engine=xelatex --listings $header -H /opt/ConfigShell/share/Markdown-Document/listing-ssetup.tex -o "$fileGenerated" "$file"
    pandoc --pdf-engine=xelatex --listings $header -H /opt/ConfigShell/share/Markdown-Document/listing-ssetup.tex -o "$fileGenerated" "$file"
}

main "$@"

# EOF
