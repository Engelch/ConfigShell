#!/usr/bin/env bash

#########################################################################################
# FUNCTIONS

function loadLibs() {
    #########################################################################################
    # ConfigShell lib 1.1 (codebase 1.0.0)
    bashLib="/opt/ConfigShell/lib/bashlib.sh"
    [ ! -f "$bashLib" ] && 1>&2 echo "bash-library $bashLib not found" && exit 127
    # shellcheck source=/opt/ConfigShell/lib/bashlib.sh
    source "$bashLib"
}

function parseCLI() {
    while getopts "DVfh" options; do         # Loop: Get the next option;
        case "${options}" in                    # TIMES=${OPTARG}
            D)  1>&2 echo Debug enabled ; DebugFlag="TRUE"
                debugVal='-D'
                ;;
            V)  gobuild.debug.linux_amd64 -V
                exit 0
                ;;
            h)  gobuild.debug.linux_amd64 -h
                exit 0
                ;;
            f)  # pass -f option for gobuild scripts
                fOption='-f' 
                ;;
            # v)  verbose=TRUE
            #     ;;
            *)
                1>&2 echo "Help with $_app -h"
                exit 1  # Exit abnormally.
                ;;
        esac
    done
}

function main() {
    _os=${GOOS:-$(uname | tr "A-Z" "a-z")}
    _arch=${GOARCH:-$(uname -m | tr "A-Z" "a-z")}
    [ "$_arch" = x86_64 ] && _arch=amd64
    debugVal=
    fOption=
    declare -r _appDir=$(dirname $0)
    declare -r _app=$(basename $0)
    declare -r _env=$(echo $_app | sed 's/^go//' | sed 's/\.upx//')
    
    parseCLI "$@"               # cannot use fn-s from loadLibs
    shift "$(( OPTIND - 1 ))"   # not working inside parseCLI
    loadLibs
    exitIfBinariesNotFound mktemp
    
    ! [ -f go.mod ] && echo 1>&2 "go.mod not found. Wrong directory?" && exit 10

    debug AppDir is "$_appDir"
    debug OS is "$_os"
    debug Architecture is "$_arch"
    debug Environment is "$_env"
    if ! [[ "$PATH" =~ '/opt/ConfigShell/bin' ]] ; then
        PATH="$PATH:/opt/ConfigShell/bin"
        debug add ConfigShell/bin to PATH
    fi
    echo Calling "${_appDir}/gobuild.${_env}.${_os}_${_arch}" $debugVal $fOption $@
    ${_appDir}/gobuild.${_env}.${_os}_${_arch} $debugVal $fOption $@
}

main "$@" 

# EOF
